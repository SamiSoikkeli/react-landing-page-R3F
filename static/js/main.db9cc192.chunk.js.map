{"version":3,"sources":["components/header.js","components/state.js","components/section.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","state","sections","pages","zoom","top","createRef","offsetContext","createContext","Section","children","offset","factor","props","useThree","size","viewport","useContext","viewportWidth","width","viewportHeight","height","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","sectionHeight","aspect","useSection","parentOffset","ref","useRef","undefined","useFrame","curY","current","position","y","curTop","lerp","Provider","value","Model","modelPath","gltf","useGLTFLoader","object","scene","dispose","Lights","intensity","HTMLContent","bgColor","domContent","positionY","rotation","useInView","threshold","refItem","inView","useEffect","document","body","style","background","scale","portal","fullscreen","App","scrollArea","onScroll","el","target","scrollTop","colorManagement","camera","fov","fallback","viewBox","fill","d","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.db9cc192.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <div className='header-inner'>\r\n        <a className='logo' href='/'>notYAMAHA.</a>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <a href='/'>discover</a>\r\n            </li>\r\n            <li>\r\n              <a href='/'>bikes</a>\r\n            </li>\r\n            <li className='btn'>\r\n              <a href='/'>buy</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import { createRef } from \"react\";\r\n\r\nconst state = {\r\n  sections: 2,\r\n  pages: 2,\r\n  zoom: 1,\r\n  top: createRef(),\r\n};\r\n\r\nexport default state;\r\n","import React, { createContext, useRef, useContext } from \"react\";\r\nimport { useFrame, useThree } from \"react-three-fiber\";\r\nimport lerp from \"lerp\";\r\nimport state from \"./state\";\r\n\r\nconst offsetContext = createContext(0);\r\n\r\nfunction Section({ children, offset, factor, ...props }) {\r\n  const { offset: parentOffset, sectionHeight, aspect } = useSection();\r\n  const ref = useRef();\r\n  offset = offset !== undefined ? offset : parentOffset;\r\n  useFrame(() => {\r\n    const curY = ref.current.position.y;\r\n    const curTop = state.top.current / aspect;\r\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1);\r\n  });\r\n  return (\r\n    <offsetContext.Provider value={offset}>\r\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\r\n        <group ref={ref}>{children}</group>\r\n      </group>\r\n    </offsetContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useSection() {\r\n  const { sections, pages, zoom } = state;\r\n  const { size, viewport } = useThree();\r\n  const offset = useContext(offsetContext);\r\n  const viewportWidth = viewport.width;\r\n  const viewportHeight = viewport.height;\r\n  const canvasWidth = viewportWidth / zoom;\r\n  const canvasHeight = viewportHeight / zoom;\r\n  const mobile = size.width < 700;\r\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1);\r\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6);\r\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1));\r\n  const aspect = size.height / viewportHeight;\r\n  return {\r\n    aspect,\r\n    viewport,\r\n    offset,\r\n    viewportWidth,\r\n    viewportHeight,\r\n    canvasWidth,\r\n    canvasHeight,\r\n    mobile,\r\n    margin,\r\n    contentMaxWidth,\r\n    sectionHeight,\r\n  };\r\n}\r\n\r\nexport { Section, useSection };\r\n","import React, { Suspense, useRef, useEffect } from \"react\";\r\nimport \"./App.scss\";\r\n//Components\r\nimport Header from \"./components/header\";\r\nimport { Section } from \"./components/section\"\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\n\r\nimport { Html, useGLTFLoader } from \"drei\";\r\n\r\n//page states\r\nimport state from \"./components/state\";\r\n\r\n//intesection observer\r\nimport {useInView} from \"react-intersection-observer\";\r\n\r\n\r\nconst Model = ({modelPath}) => {\r\n  const gltf = useGLTFLoader(modelPath, true);\r\n  return <primitive object={gltf.scene} dispose={null}/>;\r\n};\r\n\r\nconst Lights = () => {\r\n  return (\r\n    <>\r\n      <ambientLight intensity={0.3}/>\r\n      <directionalLight position={[10, 10, 5]} intensity={1} />\r\n      <directionalLight position={[0, 10, 0]} intensity={1.5} />\r\n      <spotLight intensity={1} position={[1000, 0, 0]}/>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nconst HTMLContent = ({bgColor, domContent, children, modelPath, positionY}) => {\r\n\r\n  const ref = useRef();\r\n  useFrame(() => (ref.current.rotation.y += 0.001));\r\n  const [refItem, inView] = useInView({\r\n    threshold: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    inView && (document.body.style.background = bgColor)\r\n  }, [inView]);\r\n\r\n  return (\r\n    <Section factor={1.5} offset={1}>\r\n      <group position={[0, positionY, 0]}>\r\n        <mesh ref={ref} position={[0, -30, 0]} scale={[0.4, 0.4, 0.4]}>\r\n          <Model modelPath={modelPath}/>\r\n        </mesh>\r\n        <Html portal={domContent} fullscreen>\r\n          <div className=\"container\" ref={refItem}>\r\n            {children}\r\n          </div>\r\n        </Html>\r\n      </group>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n\r\n  const domContent = useRef();\r\n  const scrollArea = useRef();\r\n  const onScroll = (el) => (state.top.current = el.target.scrollTop);\r\n  useEffect(() => void onScroll({target: scrollArea.current}), []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Canvas\r\n        colorManagement\r\n        camera={{position:[0,0,120], fov: 70}}>\r\n          <Lights/>\r\n          <Suspense fallback={null}>\r\n            <HTMLContent domContent={domContent} modelPath=\"yamahaLogo/scene.gltf\" positionY={270}>\r\n            <div className=\"container\">\r\n              <a href=\"#bike\" className=\"scroll\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\">\r\n                <path d=\"M12 16C11.7663 16.0005 11.5399 15.9191 11.36 15.77L5.36 10.77C5.15578 10.6003 5.02736 10.3564 5.00298 10.0919C4.9786 9.8275 5.06026 9.56422 5.23 9.36C5.39974 9.15578 5.64365 9.02736 5.90808 9.00298C6.1725 8.9786 6.43578 9.06026 6.64 9.23L12 13.71L17.36 9.39C17.4623 9.30694 17.58 9.2449 17.7063 9.20747C17.8327 9.17004 17.9652 9.15795 18.0962 9.17189C18.2272 9.18582 18.3542 9.22552 18.4698 9.2887C18.5855 9.35187 18.6875 9.43727 18.77 9.54C18.8616 9.64282 18.9309 9.76345 18.9737 9.89432C19.0165 10.0252 19.0318 10.1635 19.0187 10.3006C19.0055 10.4376 18.9642 10.5705 18.8974 10.6909C18.8305 10.8112 18.7395 10.9165 18.63 11L12.63 15.83C12.4449 15.9555 12.2231 16.0154 12 16V16Z\" fill=\"white\"/>\r\n              </svg>\r\n              </a>\r\n            </div>\r\n            </HTMLContent>\r\n            <HTMLContent domContent={domContent} modelPath=\"/bike.gltf\" positionY={0}>\r\n            <div id=\"bike\" className=\"container\">\r\n              <h1 className=\"title\">YAMAHA MT-09</h1>\r\n              <h3 className=\"price\">Starting at:<br/> $9,399*</h3>\r\n              <p className=\"info\">The industry benchmark in hyper naked performance and razor sharp handling with its new 890cc, triple cylinder engine and radical next‑generation design.</p>\r\n            </div>\r\n            </HTMLContent>\r\n          </Suspense>  \r\n      </Canvas>\r\n      <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll}>\r\n        <div style={{position: \"sticky\", top: 0}} ref={domContent}></div>\r\n        <div style={{height: `${state.sections * 100}vh`}}></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}